openapi: 3.0.1
info:
  title: AccountManagementAPI
  description: A CRUD API for managing accounts.
  version: 1.0.0
servers:
- url: https://env132575.apigw-aw-eu.webmethods.io/gateway/AccountManagementAPI/1.0.0
security:
- apiKey: []
tags:
- name: Account
  description: ""
paths:
  /accounts/{id}:
    summary: "/accounts/{id}"
    get:
      tags:
      - Account
      summary: Retrieve an account by ID
      operationId: getAccount
      parameters:
      - name: id
        in: path
        description: ID of the account to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation. Returns the specified account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
              example: "{\"id\":\"0017Q00000sXM0pQAG\",\"isActive\":true,\"name\"\
                :\"Software AG France\",\"type\":\"Customer - Direct\",\"description\"\
                :\"French subsidiary of Software AG\",\"billingAddress\":{\"street\"\
                :\"4 place des Saisons\",\"city\":\"Courbevoie\",\"state\":\"\",\"\
                postalCode\":\"92400\",\"countryCode\":\"FR\"},\"shippingAddress\"\
                :{\"street\":\"1 rue de Rivoli\",\"city\":\"Paris\",\"state\":\"Ile\
                \ de France\",\"postalCode\":\"75001\",\"countryCode\":\"FR\"},\"\
                industry\":\"NAF5829C\",\"identifierType\":\"SIREN\",\"identifierValue\"\
                :\"327992319\",\"creationDateTime\":\"2022-12-05T11:23:56.724Z\",\"\
                lastUpdateDateTime\":\"2022-12-05T11:23:56.724Z\"}"
        "400":
          description: Bad request. Error details provided in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized. Authentication required.
          content: {}
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden. Authorization required.
          content: {}
        "404":
          description: Account not found.
          content: {}
    put:
      tags:
      - Account
      summary: Update an existing account
      operationId: updateAccount
      parameters:
      - name: id
        in: path
        description: ID of the account to update
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
            example: "{\"name\":\"Software AG France\",\"type\":\"Customer - Direct\"\
              ,\"description\":\"French subsidiary of Software AG\",\"billingAddress\"\
              :{\"street\":\"4 place des Saisons\",\"city\":\"Courbevoie\",\"postalCode\"\
              :\"92400\",\"countryCode\":\"FR\"},\"shippingAddress\":{\"street\":\"\
              1 rue de Rivoli\",\"city\":\"Paris\",\"state\":\"Ile de France\",\"\
              postalCode\":\"75001\",\"countryCode\":\"FR\"},\"industry\":\"NAF5829C\"\
              ,\"identifierType\":\"SIREN\",\"identifierValue\":\"327992319\"}"
      responses:
        "200":
          description: Successful operation. Returns the updated account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
              example: "{\"id\":\"0017Q00000sXM0pQAG\",\"isActive\":true,\"name\"\
                :\"Software AG France\",\"type\":\"Customer - Direct\",\"description\"\
                :\"French subsidiary of Software AG\",\"billingAddress\":{\"street\"\
                :\"4 place des Saisons\",\"city\":\"Courbevoie\",\"postalCode\":\"\
                92400\",\"countryCode\":\"FR\"},\"shippingAddress\":{\"street\":\"\
                1 rue de Rivoli\",\"city\":\"Paris\",\"state\":\"Ile de France\",\"\
                postalCode\":\"75001\",\"countryCode\":\"FR\"},\"industry\":\"NAF5829C\"\
                ,\"identifierType\":\"SIREN\",\"identifierValue\":\"327992319\",\"\
                creationDateTime\":\"2022-12-05T11:23:56.724Z\",\"lastUpdateDateTime\"\
                :\"2022-12-05T11:23:56.724Z\"}"
        "400":
          description: Bad request. Error details provided in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized. Authentication required.
          content: {}
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden. Authorization required.
          content: {}
        "404":
          description: Account not found.
          content: {}
    delete:
      tags:
      - Account
      summary: Delete an account
      operationId: deleteAccount
      parameters:
      - name: id
        in: path
        description: ID of the account to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Bad request. Error details provided in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized. Authentication required.
          content: {}
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "204":
          description: Account deleted successfully.
          content: {}
        "403":
          description: Forbidden. Authorization required.
          content: {}
        "404":
          description: Account not found.
          content: {}
  /accounts:
    summary: /accounts
    get:
      tags:
      - Account
      summary: Retrieve accounts based on specified criteria
      description: |
        Retrieve a list of accounts based on the provided filters.
      operationId: listAccounts
      parameters:
      - name: isActive
        in: query
        description: Filter by account activity status
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: name
        in: query
        description: Filter by account name
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
      - name: lastUpdateBefore
        in: query
        description: Filter by accounts last updated before the specified date
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: lastUpdateAfter
        in: query
        description: Filter by accounts last updated after the specified date
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: limit
        in: query
        description: Maximum number of accounts to return
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          maximum: 2000
          minimum: 200
          type: integer
          format: int64
      - name: sortBy
        in: query
        description: Attribute to sort the accounts by
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - id
          - name
          - lastUpdateDateTime
      - name: sortOrder
        in: query
        description: Sort order for the results
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ascending
          - descending
      responses:
        "200":
          description: Successful operation. Returns a list of accounts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccounts'
              example: "{\"itemCount\":1,\"hasMore\":false,\"accounts\":[{\"id\":\"\
                0017Q00000sXM0pQAG\",\"isActive\":true,\"name\":\"Software AG France\"\
                ,\"type\":\"Customer - Direct\",\"description\":\"French subsidiary\
                \ of Software AG\",\"billingAddress\":{\"street\":\"4 place des Saisons\"\
                ,\"city\":\"Courbevoie\",\"state\":\"\",\"postalCode\":\"92400\",\"\
                countryCode\":\"FR\"},\"shippingAddress\":{\"street\":\"1 rue de Rivoli\"\
                ,\"city\":\"Paris\",\"state\":\"Ile de France\",\"postalCode\":\"\
                75001\",\"countryCode\":\"FR\"},\"industry\":\"NAF5829C\",\"identifierType\"\
                :\"SIREN\",\"identifierValue\":\"327992319\",\"creationDateTime\"\
                :\"2022-12-05T11:23:56.724Z\",\"lastUpdateDateTime\":\"2022-12-05T11:23:56.724Z\"\
                }]}"
        "400":
          description: Bad request. Error details provided in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized. Authentication required.
          content: {}
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden. Authorization required.
          content: {}
    post:
      tags:
      - Account
      summary: Create a new account
      operationId: createAccount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
            example: "{\"name\":\"Software AG France\",\"type\":\"Customer - Direct\"\
              ,\"description\":\"French subsidiary of Software AG\",\"billingAddress\"\
              :{\"street\":\"4 place des Saisons\",\"city\":\"Courbevoie\",\"state\"\
              :\"\",\"postalCode\":\"92400\",\"countryCode\":\"FR\"},\"shippingAddress\"\
              :{\"street\":\"1 rue de Rivoli\",\"city\":\"Paris\",\"state\":\"Ile\
              \ de France\",\"postalCode\":\"75001\",\"countryCode\":\"FR\"},\"industry\"\
              :\"NAF5829C\",\"identifierType\":\"SIREN\",\"identifierValue\":\"327992319\"\
              }"
      responses:
        "201":
          description: Account created successfully. Returns the newly created account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
              example: "{\"id\":\"0017Q00000sXM0pQAG\",\"isActive\":true,\"name\"\
                :\"Software AG France\",\"type\":\"Customer - Direct\",\"description\"\
                :\"French subsidiary of Software AG\",\"billingAddress\":{\"street\"\
                :\"4 place des Saisons\",\"city\":\"Courbevoie\",\"state\":\"\",\"\
                postalCode\":\"92400\",\"countryCode\":\"FR\"},\"shippingAddress\"\
                :{\"street\":\"1 rue de Rivoli\",\"city\":\"Paris\",\"state\":\"Ile\
                \ de France\",\"postalCode\":\"75001\",\"countryCode\":\"FR\"},\"\
                industry\":\"NAF5829C\",\"identifierType\":\"SIREN\",\"identifierValue\"\
                :\"327992319\",\"creationDateTime\":\"2022-12-05T11:23:56.724Z\",\"\
                lastUpdateDateTime\":\"2022-12-05T11:23:56.724Z\"}"
        "400":
          description: Bad request. Error details provided in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized. Authentication required.
          content: {}
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden. Authorization required.
          content: {}
components:
  schemas:
    Account:
      required:
      - name
      - type
      type: object
      properties:
        lastUpdateDateTime:
          type: string
          description: |
            The date and time the account was last updated.
            This date-time is allocated by the server so it is not needed in account creation (POST /accounts) and update (PUT /accounts/{accountId}).
          format: date-time
          readOnly: true
          example: 2022-12-05T11:23:56.724Z
        identifierValue:
          maxLength: 100
          type: string
          description: The value of the account's identifier.
          example: "327992319"
        description:
          maxLength: 1000
          type: string
          description: Description of the account.
          example: French subsidiary of Software AG
        industry:
          maxLength: 50
          type: string
          description: The industry sector of the account.
          example: NAF5829C
        identifierType:
          type: string
          description: The type of identifier for the account.
          example: SIREN
          enum:
          - DUNS
          - SIREN
          - BVD
          - EXP
          - VAT
        isActive:
          type: boolean
          description: Indicates if the account is active or logically deleted.
          example: true
          default: true
        type:
          type: string
          description: The type of account.
          example: Customer - Direct
          enum:
          - Prospect
          - Customer - Direct
          - Customer - Channel
          - Channel Partner / Reseller
          - Installation Partner
          - Technology Partner
          - Other
        parentAccountId:
          maxLength: 50
          type: string
          description: "The ID of the parent account, if applicable."
          example: 0017Q000009ZWn6QAG
        name:
          maxLength: 100
          minLength: 2
          type: string
          description: Name of the account.
          example: Software AG France
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        id:
          maxLength: 50
          type: string
          description: |
            The unique identifier of the account.
            This id is allocated by the server so it must not be provided when creating an account using POST / accounts.
          example: 0017Q00000sXM0pQAG
        creationDateTime:
          type: string
          description: |
            The date and time the account was created.
            This date-time is allocated by the server so it is not needed in account creation (POST /accounts) and update (PUT /accounts/{accountId}).
          format: date-time
          readOnly: true
          example: 2022-12-05T11:23:56.724Z
    Address:
      required:
      - city
      - countryCode
      type: object
      properties:
        city:
          maxLength: 100
          minLength: 2
          type: string
          description: The city of the address.
          example: Courbevoie
        countryCode:
          maxLength: 2
          minLength: 2
          type: string
          description: The two-letter ISO country code of the address.
          example: FR
        street:
          maxLength: 200
          minLength: 2
          type: string
          description: The street of the address.
          example: 4 place des Saisons
        postalCode:
          maxLength: 50
          minLength: 1
          type: string
          description: The postal code of the address.
          example: "92400"
        state:
          maxLength: 50
          type: string
          description: "The state or region of the address, if applicable."
          example: Hauts de Seine
    PaginatedAccounts:
      required:
      - itemCount
      type: object
      properties:
        hasMore:
          type: boolean
          description: Indicates if there are more accounts to load.
          example: false
          default: false
        accounts:
          maxItems: 2000
          minItems: 0
          type: array
          description: A list of accounts.
          items:
            $ref: '#/components/schemas/Account'
        itemCount:
          type: integer
          description: The total number of accounts available.
          format: int32
          example: 2
    Error:
      type: object
      properties:
        Code:
          maxLength: 3
          minLength: 3
          type: string
          description: HTTP status code associated to the error.
          example: "500"
        Exception:
          maxLength: 1000
          type: string
          description: Error message detailing what went wrong.
          example: Internal server error
        TransactionId:
          maxLength: 50
          type: string
          description: "A unique identifier for the transaction, for debugging."
          example: APIGW:e632bb5e-bf09-473e-958c-0f2cc202bf42:621
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    apiKey:
      type: apiKey
      name: x-Gateway-APIKey
      in: header
  links: {}
  callbacks: {}
