openapi: 3.0.1
info:
  title: ReferenceDataAPI
  description: API for listing and retrieving various reference data
  version: 1.0.0-mock
servers:
- url: https://env132575.apigw-aw-eu.webmethods.io/gateway/ReferenceDataAPI/1.0.0-mock
security:
- apiKey: []
tags:
- name: AccountType
  description: ""
- name: ContactRole
  description: ""
- name: Countries
  description: ""
- name: IdentifierType
  description: ""
- name: Industry
  description: ""
- name: Salutation
  description: ""
paths:
  /contact-roles:
    summary: /contact-roles
    get:
      tags:
      - ContactRole
      summary: List all contact roles
      operationId: listContactRoles
      parameters: []
      responses:
        "200":
          description: A list of contact roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactRole'
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden
          content: {}
  /contact-roles/{code}:
    summary: "/contact-roles/{code}"
    get:
      tags:
      - ContactRole
      summary: Get details of a specific contact role
      operationId: getContactRole
      parameters:
      - name: code
        in: path
        description: The role code of the contact role to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Details of a specific contact role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactRole'
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /account-types:
    summary: /account-types
    get:
      tags:
      - AccountType
      summary: List all account types
      operationId: listAccountTypes
      parameters: []
      responses:
        "200":
          description: A list of account types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountType'
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden
          content: {}
  /industries/{code}:
    summary: "/industries/{code}"
    get:
      tags:
      - Industry
      summary: Get details of a specific industry
      operationId: getIndustry
      parameters:
      - name: code
        in: path
        description: The industry code to retrieve
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 20
          type: string
      responses:
        "200":
          description: Details of a specific industry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Industry'
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /identifier-types/{code}:
    summary: "/identifier-types/{code}"
    get:
      tags:
      - IdentifierType
      summary: Get details of a specific identifier type
      operationId: getIdentifierType
      parameters:
      - name: code
        in: path
        description: The identifier type code to retrieve
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 20
          type: string
      responses:
        "200":
          description: Details of a specific identifier type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierType'
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /account-types/{code}:
    summary: "/account-types/{code}"
    get:
      tags:
      - AccountType
      summary: Get details of a specific account type
      operationId: getAccountType
      parameters:
      - name: code
        in: path
        description: The contact type code of the account type to retrieve
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 10
          type: string
      responses:
        "200":
          description: Details of a specific account type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountType'
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /industries:
    summary: /industries
    get:
      tags:
      - Industry
      summary: List all industries
      operationId: listIndustries
      parameters: []
      responses:
        "200":
          description: A list of industries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Industry'
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden
          content: {}
  /countries/{code}:
    summary: "/countries/{code}"
    get:
      tags:
      - Countries
      summary: "Get details of a specific country, returning country name according\
        \ to the Accept-Language header"
      operationId: getCountry
      parameters:
      - name: code
        in: path
        description: ISO country code
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Details of a specific country
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /identifier-types:
    summary: /identifier-types
    get:
      tags:
      - IdentifierType
      summary: List all identifier types
      operationId: listIdentifierTypes
      parameters: []
      responses:
        "200":
          description: A list of identifier types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentifierType'
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden
          content: {}
  /countries:
    summary: /countries
    get:
      tags:
      - Countries
      summary: "List all countries, returning country names according to the Accept-Language\
        \ header"
      operationId: listCountries
      parameters: []
      responses:
        "200":
          description: A list of countries
          content:
            application/json:
              schema:
                type: object
                properties:
                  countries:
                    type: array
                    items:
                      $ref: '#/components/schemas/Country'
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden
          content: {}
  /salutations:
    summary: /salutations
    get:
      tags:
      - Salutation
      summary: List all salutations
      operationId: listSalutations
      parameters: []
      responses:
        "200":
          description: A list of salutations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Salutation'
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden
          content: {}
  /salutations/{code}:
    summary: "/salutations/{code}"
    get:
      tags:
      - Salutation
      summary: Get details of a specific salutation
      operationId: getSalutation
      parameters:
      - name: code
        in: path
        description: The salutation code to retrieve
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 10
          type: string
      responses:
        "200":
          description: Details of a specific salutation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salutation'
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
components:
  schemas:
    Industry:
      required:
      - code
      - wording
      type: object
      properties:
        code:
          maxLength: 20
          type: string
          description: The industry code
          example: NAF5829C
        locale:
          maxLength: 20
          minLength: 2
          type: string
          description: Either an ISO language code or a IETF BCP 47 locale
          example: en-US
        wording:
          maxLength: 100
          type: string
          description: "The industry wording, in the language specified in the Accept-Language\
            \ HTTP header, or English by default if the header is missing"
          example: Customer - Direct
    Country:
      required:
      - code
      - wording
      type: object
      properties:
        code:
          maxLength: 2
          minLength: 2
          type: string
          description: The 2-letters ISO country code
          example: US
        locale:
          maxLength: 20
          minLength: 2
          type: string
          description: Either an ISO language code or a IETF BCP 47 locale
          example: en-US
        wording:
          maxLength: 100
          type: string
          description: "The country name, in the language specified in the Accept-Language\
            \ HTTP header, or English by default if the header is missing"
          example: United States Of America
    Error:
      type: object
      properties:
        Code:
          maxLength: 3
          minLength: 3
          type: string
          description: HTTP status code associated to the error.
          example: "500"
        Exception:
          maxLength: 1000
          type: string
          description: Error message detailing what went wrong.
          example: Internal server error
        TransactionId:
          maxLength: 50
          type: string
          description: "A unique identifier for the transaction, for debugging."
          example: APIGW:e632bb5e-bf09-473e-958c-0f2cc202bf42:621
    AccountType:
      required:
      - code
      - wording
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: The contact type code
          example: Customer - Direct
        locale:
          maxLength: 20
          minLength: 2
          type: string
          description: Either an ISO language code or a IETF BCP 47 locale
          example: en-US
        wording:
          maxLength: 100
          type: string
          description: "The contact type wording, in the language specified in the\
            \ Accept-Language HTTP header, or English by default if the header is\
            \ missing"
          example: Customer - Direct
    IdentifierType:
      required:
      - code
      - wording
      type: object
      properties:
        code:
          maxLength: 20
          type: string
          description: The identifier type code
          example: VAT
        locale:
          maxLength: 20
          minLength: 2
          type: string
          description: Either an ISO language code or a IETF BCP 47 locale
          example: en-US
        wording:
          maxLength: 100
          type: string
          description: "The identifier type wording, in the language specified in\
            \ the Accept-Language HTTP header, or English by default if the header\
            \ is missing"
          example: VAT
    Salutation:
      required:
      - abbreviation
      - code
      - wording
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: The salutation code
          example: Dr
        abbreviation:
          maxLength: 20
          type: string
          description: "The salutation abbreviation, in the language specified in\
            \ the Accept-Language HTTP header, or English by default if the header\
            \ is missing"
          example: Dr.
        locale:
          maxLength: 20
          minLength: 2
          type: string
          description: Either an ISO language code or a IETF BCP 47 locale
          example: en-US
        wording:
          maxLength: 100
          type: string
          description: "The salutation wording, in the language specified in the Accept-Language\
            \ HTTP header, or English by default if the header is missing"
          example: Doctor
    ContactRole:
      required:
      - code
      - wording
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: The role code
          example: Employee
        locale:
          maxLength: 20
          minLength: 2
          type: string
          description: Either an ISO language code or a IETF BCP 47 locale
          example: en-US
        wording:
          maxLength: 100
          type: string
          description: "The role wording, in the language specified in the Accept-Language\
            \ HTTP header, or English by default if the header is missing"
          example: Employee
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    apiKey:
      type: apiKey
      name: x-Gateway-APIKey
      in: header
  links: {}
  callbacks: {}
